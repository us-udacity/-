WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.700
这道练习要求我们使用这个颜色列表画一个彩虹色的形状

00:00:06.700 --> 00:00:09.030
在此视频中 我将演示如何画一个六边形

00:00:09.029 --> 00:00:11.669
每条边都有不同的颜色

00:00:11.669 --> 00:00:15.689
因为六边形有六条边 这个列表有六种颜色

00:00:15.689 --> 00:00:18.039
因此每条边都有一种颜色

00:00:18.039 --> 00:00:21.929
首先我们需要添加代码来创建新的 turtle

00:00:21.929 --> 00:00:24.509
然后编写绘制六边形的代码

00:00:24.510 --> 00:00:26.700
我们在之前的课程中已经编写过这样的代码

00:00:26.699 --> 00:00:29.914
只是没有设成彩虹色

00:00:29.914 --> 00:00:33.530
当我要尝试新的功能并且不知道如何实现时

00:00:33.530 --> 00:00:36.710
通常 我会从我很熟悉的部分开始

00:00:36.710 --> 00:00:40.109
然后逐步尝试并实现新功能

00:00:40.109 --> 00:00:43.519
暂时我先不去管彩虹色部分

00:00:43.520 --> 00:00:46.090
首先我将画一个简单的六边形

00:00:46.090 --> 00:00:48.845
为此 我将使用 for 循环

00:00:48.844 --> 00:00:51.469
因为六边形有六条边

00:00:51.469 --> 00:00:53.905
因此我要让循环运行六次

00:00:53.905 --> 00:00:57.285
为此 我可以使用像这样的列表 其中包含六项

00:00:57.284 --> 00:00:59.384
每次循环运行时

00:00:59.384 --> 00:01:01.129
我都要求 turtle 向前移动 100 个像素

00:01:01.130 --> 00:01:04.280
表示六边形的一条边大小

00:01:04.280 --> 00:01:06.195
然后转向

00:01:06.194 --> 00:01:07.459
正如之前看到的

00:01:07.459 --> 00:01:10.549
任何普通多边形的角度计算方法是

00:01:10.549 --> 00:01:13.969
用 360 度除以形状的边数

00:01:13.969 --> 00:01:16.924
360/6 = 60

00:01:16.924 --> 00:01:20.409
要求 turtle 右转 60 度

00:01:20.409 --> 00:01:24.319
现在 代码应该能画一个六边形了

00:01:24.319 --> 00:01:26.929
每当代码到了我认为应该能够运行

00:01:26.930 --> 00:01:29.620
并且具有直观效果的阶段时

00:01:29.620 --> 00:01:32.905
我都喜欢测试一下 确保能够按预期运行

00:01:32.905 --> 00:01:36.680
这样的话 我可以发现在编写代码时可能会犯的小错误

00:01:36.680 --> 00:01:39.350
看起来画出了一个六边形

00:01:39.349 --> 00:01:43.319
看得不太清楚 因为使用的是很细的黑色线条

00:01:43.319 --> 00:01:45.869
可以更改一下

00:01:45.870 --> 00:01:49.329
使用 width 方法使线条更粗

00:01:50.480 --> 00:01:53.545
现在思考下如何更改颜色

00:01:53.545 --> 00:01:58.265
首先 像之前一样设置一个颜色

00:01:58.265 --> 00:02:01.775
并且不太喜欢六边形不在中心位置

00:02:01.775 --> 00:02:03.725
似乎跑到右下角了

00:02:03.724 --> 00:02:07.809
因此在开始绘制之前 使 turtle 往回退一点点

00:02:07.810 --> 00:02:11.590
绘制完毕后 使 turtle 隐藏起来

00:02:11.590 --> 00:02:15.819
这样画出的形状就不会多出一个小箭头

00:02:16.180 --> 00:02:19.105
现在需要思考每次循环时

00:02:19.104 --> 00:02:22.164
如何更改颜色

00:02:22.164 --> 00:02:25.304
我们知道要使用这个颜色列表

00:02:25.305 --> 00:02:28.420
更具体地来说 每次循环运行时

00:02:28.419 --> 00:02:32.189
我们都要使用这个列表中的一种颜色

00:02:32.189 --> 00:02:35.379
技巧在于使用这个循环变量

00:02:35.379 --> 00:02:38.824
目前有一个叫做 side 的循环变量

00:02:38.824 --> 00:02:40.619
每次循环运行时

00:02:40.620 --> 00:02:43.099
都将这个列表中的一个数字赋值给该变量

00:02:43.099 --> 00:02:44.489
从 1 到 6

00:02:44.490 --> 00:02:46.750
但是我们不会对这些数字执行任何操作

00:02:46.750 --> 00:02:48.935
只是表示有六个数字

00:02:48.935 --> 00:02:54.090
但是 这个 rainbow 列表也有六项

00:02:54.090 --> 00:02:59.134
因此 我们可以将数字列表替换成这个颜色列表

00:02:59.134 --> 00:03:01.479
并且程序不应该执行要执行的操作

00:03:01.479 --> 00:03:04.949
它应该依然像之前一样画一个六边形

00:03:04.949 --> 00:03:08.884
因为这个列表中的每项是一种颜色

00:03:08.884 --> 00:03:13.294
我将这个变量的名称从 side 改成 pretty_color

00:03:13.294 --> 00:03:16.549
将其称为 pretty_color 而不只是 color

00:03:16.550 --> 00:03:19.515
是因为我不希望与 color 方法混淆

00:03:19.514 --> 00:03:21.909
现在每次循环运行时

00:03:21.909 --> 00:03:25.819
pretty_color 变量将从该列表中获取不同的颜色

00:03:25.819 --> 00:03:28.709
首先是红色 然后是橙色 然后是黄色 等等

00:03:28.710 --> 00:03:31.670
但是我们依然没有用这些颜色执行任何操作

00:03:31.669 --> 00:03:33.039
运行代码后

00:03:33.039 --> 00:03:36.229
还是普通的红色六边形

00:03:36.229 --> 00:03:42.840
我们只需根据这个 pretty_color 变量设置颜色

00:03:43.229 --> 00:03:46.319
现在每次循环运行时

00:03:46.319 --> 00:03:48.500
我们都向 color 方法传递不同的颜色

00:03:48.500 --> 00:03:52.354
然后用作一条边的颜色

00:03:52.354 --> 00:03:54.229
搞定

00:03:54.229 --> 00:03:55.759
画出了彩虹色的六边形

