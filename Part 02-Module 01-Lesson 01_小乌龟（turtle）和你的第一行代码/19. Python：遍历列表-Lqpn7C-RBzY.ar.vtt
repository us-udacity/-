WEBVTT
Kind: captions
Language: ar

00:00:00.501 --> 00:00:03.237
ما الذي يجري في هذا الكود؟

00:00:03.337 --> 00:00:06.373
لدينا متغير قائمة اسمه "lengths"،

00:00:06.473 --> 00:00:09.176
ويضم كل هذه الأرقام داخله،

00:00:09.276 --> 00:00:13.580
ثم لدينا كود إعداد السلحفاة
الذي أصبح مألوفاً الآن.

00:00:13.680 --> 00:00:19.286
ثم لدينا "for length in lengths". ما هذا؟

00:00:19.386 --> 00:00:24.558
يكمن سر فهم هذا السطر
في معرفة أن الطول "length" هو متغير،

00:00:24.658 --> 00:00:28.362
وبإمكان حلقة "For"
أن تعين قيم لهذا المتغير.

00:00:28.462 --> 00:00:30.130
إنه لا يستخدم علامة التساوي،

00:00:30.230 --> 00:00:34.101
لكنه يقوم بشيء مماثل
لعبارات التعيين التي رأيتها من قبل،

00:00:34.201 --> 00:00:39.907
مثل amy = turtle.Turtle
أو pretty_color = "blue".

00:00:40.007 --> 00:00:44.845
تذكر أن الحلقة ستشتغل مرة واحدة
لكل بند في القائمة.

00:00:44.945 --> 00:00:47.948
في هذه الحالة، هناك 10 بنود في القائمة،

00:00:48.048 --> 00:00:50.651
لذا سيتم تشغيل الحلقة 10 مرات.

00:00:50.751 --> 00:00:52.419
وفي كل مرة يتم فيها تشغيل الحلقة،

00:00:52.519 --> 00:00:54.621
ستأخذ أحد البنود من القائمة،

00:00:54.721 --> 00:00:58.492
وتعين ذلك البند للمتغير "length".

00:00:58.592 --> 00:01:00.260
في أول تشغيل للحلقة،

00:01:00.360 --> 00:01:03.564
يتم تعيين
البند الأول في القائمة للمتغير "length"،

00:01:03.664 --> 00:01:05.899
وهو العدد الصحيح 10.

00:01:05.999 --> 00:01:09.903
وفي التكرار الثاني،
يتم تعيين العدد 20 للمتغير "length".

00:01:10.003 --> 00:01:14.374
وفي المرة الثالثة، يتم تعيين العدد 30،
وهلم جراً.

00:01:14.474 --> 00:01:17.244
مجدداً، لا توجد أي عبارات تعيين ظاهرة هنا،

00:01:17.344 --> 00:01:22.316
لكن النتيجة مشابهة لما نحصل عليه
لو كان لدينا سطر مثل length = 10،

00:01:22.416 --> 00:01:27.287
ثم length = 20
ثم length = 30، وهكذا.

00:01:27.387 --> 00:01:30.324
ليس من الضروري
أن تكون عبارات التعيين هذه موجودة فعلاً،

00:01:30.424 --> 00:01:34.194
لأن التعيين يحدث كجزء من حلقة "For".

00:01:34.294 --> 00:01:36.463
هذه هي الطريقة
التي تعمل بها حلقات "For".

00:01:36.563 --> 00:01:41.168
ولكن كيف يؤثر هذا
على الشكل الذي ترسمه السلحفاة؟

00:01:41.268 --> 00:01:48.008
لعلك لاحظت أنه يتم استخدام
المتغير "length" أيضاً في هذا السطر.

00:01:48.108 --> 00:01:49.576
في كل تكرار للحلقة،

00:01:49.676 --> 00:01:52.813
يؤدي هذا السطر شيئاً مختلفاً بعض الشيء.

00:01:52.913 --> 00:01:54.281
في التكرار الأول،

00:01:54.381 --> 00:01:57.317
تم تعيين قيمة 10 للمتغير "length"،

00:01:57.417 --> 00:02:02.689
حيث يعمل السطر بالضبط
كما لو كنت قد كتبت هذا السطر بدلاً منه.

00:02:02.789 --> 00:02:04.591
ولكن في التكرار الثاني للحلقة،

00:02:04.691 --> 00:02:07.194
تم تعيين القيمة 20 لـ"length"،

00:02:07.294 --> 00:02:12.132
والآن يعمل السطر كما لو كان
dizzy.forward(20)

00:02:13.233 --> 00:02:16.270
يستمر هذا لكل رقم في القائمة.

00:02:16.370 --> 00:02:19.006
والنتيجة هي أنه في كل تكرار للحلقة،

00:02:19.106 --> 00:02:22.176
تتحرك "dizzy" إلى الأمام بمقدار مختلف.

00:02:22.276 --> 00:02:24.945
إليك طريقة
للتعبير عن هذا النوع من التكرارات الحلقية.

00:02:25.045 --> 00:02:28.115
فنحن نقول "looping over the list"،
أي أننا نكرر وفقاً للقائمة،

00:02:28.215 --> 00:02:33.520
أي أنها تنفذ أمراً لكل بند في القائمة.

00:02:33.620 --> 00:02:35.522
ولكن هناك شيء يجب توخي الحذر منه.

00:02:35.622 --> 00:02:39.993
ينتهي السطر الأول
من حلقة "For" دائماً بنقطتين،

00:02:40.093 --> 00:02:44.898
وتوضع للأسطر داخل الحلقة مسافة بادئة
بنفس عدد الفراغات دائماً.

00:02:44.998 --> 00:02:48.502
إذا تخليت عن النقطتين،
أو إذا كانت المسافات البادئة غير متطابقة،

00:02:48.602 --> 00:02:51.805
سوف تعطيك "Python" خطأ
في بناء الجملة على السطر المتأثر،

00:02:51.905 --> 00:02:53.740
لذا تأكد من بناء الجمل بطريقة سليمة.

