WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.075
这段代码会画一个方形

00:00:03.075 --> 00:00:06.980
注意 我们在这里不断使用相同的代码行

00:00:06.980 --> 00:00:10.054
这只是有四条边的方形

00:00:10.054 --> 00:00:14.085
如果要画一个有 100 条边的形状会怎样？

00:00:14.085 --> 00:00:17.820
工作量会很大 实际上没必要这样

00:00:17.820 --> 00:00:19.829
我们可以使用 for 循环

00:00:19.829 --> 00:00:22.050
画一个有任何条边的形状

00:00:22.050 --> 00:00:25.269
只需三行代码就能搞定

00:00:25.269 --> 00:00:27.210
要创建 for 循环

00:00:27.210 --> 00:00:28.975
以这样的代码行开始

00:00:28.975 --> 00:00:31.990
for side in [1, 2, 3, 4]:

00:00:31.989 --> 00:00:42.420
然后是要循环或重复的代码

00:00:42.420 --> 00:00:47.590
注意 这几行代码缩进了 使它们向右移动了四个空格

00:00:47.590 --> 00:00:51.145
表示这些行位于循环中

00:00:51.145 --> 00:00:55.850
换句话说 这些缩进的行将重复运行

00:00:55.850 --> 00:00:59.234
这些代码将运行多次

00:00:59.234 --> 00:01:00.924
但是到底多少次呢？

00:01:00.924 --> 00:01:06.739
注意这行的 for…in…结构

00:01:06.739 --> 00:01:09.920
本质上 表示针对这个列表中的每项

00:01:09.920 --> 00:01:13.835
运行这个循环中的代码一次

00:01:13.834 --> 00:01:16.299
因为列表中有四项

00:01:16.299 --> 00:01:18.795
因此循环运行四次

00:01:18.795 --> 00:01:20.435
对于这个特定循环

00:01:20.435 --> 00:01:23.320
列表项到底是什么并不重要

00:01:23.319 --> 00:01:26.929
我们可以更改这些数字 甚至替换成字符串

00:01:26.930 --> 00:01:30.710
列表中的每项运行循环一次

00:01:30.709 --> 00:01:35.359
因为列表中有四项 因此该循环将运行四次

