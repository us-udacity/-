WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.639
for 循环使程序能够以特定的次数重复某些指令

00:00:04.639 --> 00:00:08.609
并且使这些指令能够使用列表中的值

00:00:08.609 --> 00:00:12.684
但是 for 循环的内部结构可能会非常复杂

00:00:12.685 --> 00:00:15.505
甚至可以包含其他循环

00:00:15.505 --> 00:00:20.609
如果运行 5 次的循环位于运行 6 次的循环当中

00:00:20.609 --> 00:00:25.519
那么内部代码将运行 5X6=30 次

00:00:25.519 --> 00:00:29.160
例如 这是我们熟悉的循环

00:00:29.160 --> 00:00:33.390
它会画一个方形 这是另一个画出更小方形的循环

00:00:33.390 --> 00:00:40.370
除了 turtle 每次向前移动 10 个像素（而不是 100 个）之外 其他完全一样

00:00:40.799 --> 00:00:46.484
我可以将这个循环放在另一个循环当中

00:00:46.484 --> 00:00:51.159
只需这样缩进即可

00:00:51.159 --> 00:00:53.869
这称之为嵌套循环

00:00:53.869 --> 00:01:00.214
也就是这个循环嵌套在这个循环里

00:01:00.215 --> 00:01:03.040
如果运行这段代码

00:01:03.039 --> 00:01:06.890
它会画出大方形的一条边

00:01:06.890 --> 00:01:10.750
然后进入嵌套循环并画出更小方形的所有四条边

00:01:10.750 --> 00:01:14.930
然后回到顶层的大循环并画出下一条大边

00:01:14.930 --> 00:01:17.150
然后进入嵌套循环

00:01:17.150 --> 00:01:20.850
并画出另一个小方形 等等 直到全操作完毕

00:01:20.849 --> 00:01:25.054
总之 我们运行了这个主循环四次

00:01:25.055 --> 00:01:32.180
并且每次主循环运行时 这个嵌套循环都运行四次

00:01:32.180 --> 00:01:35.925
因此总次数是 4X4 即 16 次

00:01:35.924 --> 00:01:39.034
这就是嵌套循环概念

00:01:39.034 --> 00:01:41.849
我们再看一个比较有趣的示例

00:01:41.849 --> 00:01:44.864
这是另一个嵌套循环示例

00:01:44.864 --> 00:01:50.354
这段代码将画一个由六边形组成的链条 像这样

00:01:50.355 --> 00:01:56.880
首先 定义链条有 8 个环 六边形有 6 条边

00:01:56.879 --> 00:02:00.994
用长度为 8 和 6 的列表设置两个变量

00:02:00.995 --> 00:02:06.829
我们将遍历这些变量 对于链条中的每个环

00:02:06.829 --> 00:02:13.444
外部循环都运行一次 对于这些环的每条边 内部循环都会运行一次

00:02:13.444 --> 00:02:16.599
所以在 for link in links 的循环里

00:02:16.599 --> 00:02:21.439
我们画出一个六边形 然后挪到下个环

00:02:21.439 --> 00:02:26.859
方法是抬笔 向前移动 然后再落笔

00:02:26.860 --> 00:02:29.290
要画出六边形

00:02:29.289 --> 00:02:31.519
我们执行内部循环

00:02:31.520 --> 00:02:36.115
for side in sides 换句话说 对于六条边中的每条边

00:02:36.115 --> 00:02:39.950
我们向前移动 10 个像素并右转 60 度

00:02:39.949 --> 00:02:41.810
这个内部循环画出一个六边形

00:02:41.810 --> 00:02:46.400
外部循环的剩余代码

00:02:46.400 --> 00:02:48.305
使图形从一个环移动到另一个环

00:02:48.305 --> 00:02:52.895
整段代码画出了完整的链条

00:02:52.895 --> 00:02:56.915
你可以修改此代码并画出其他图形

00:02:56.914 --> 00:03:01.829
可以画出任何你喜欢的图形 举个例子

